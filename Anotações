//Possível criação dos botões?
for(String value : generatedPuzzle.getValidValues()) {
			JButton b = new JButton(value);
			b.setPreferredSize(new Dimension(40,40));
			b.addActionListener(sPanel.new NumActionListener());
			buttonSelectionPanel.add(b);

//Verificação se o elemento inserido é válido:
private boolean isValidValue(String value) {
		for(String str : this.VALIDVALUES) {
			if(str.equals(value)) return true;
		}
		return false;
	}
public boolean isValidMove(int row,int col,String value) {
		if(this.inRange(row,col)) {
			if(!this.numInCol(col,value) && !this.numInRow(row,value) && !this.numInBox(row,col,value)) {
				return true;
			}
		}
		return false;
	}
Ideia: Permitir a inserção de números no sudoku por meio de uma caixa de texto e um botão que permita essa operação.
public void rebuildInterface(SudokuPuzzleType puzzleType,int fontSize) { //Código original está no SudokuFrame
		SudokuPuzzle generatedPuzzle = new SudokuGenerator().generateRandomSudoku(puzzleType);
		sPanel.newSudokuPuzzle(generatedPuzzle);
		sPanel.setFontSize(fontSize);
		buttonSelectionPanel.removeAll();
		JTextField texto= new JTextField(10);
		JButton inserir= new JButton("Inserir número");
		inserir.addActionListener(sPanel new GameActionListener());
		sPanel.repaint();
		buttonSelectionPanel.revalidate();
		buttonSelectionPanel.repaint();
	}
public class NumActionListener implements ActionListener { //classe original presente no SudokuPanel
		@Override
		public void actionPerformed(ActionEvent e) {
			messageFromNumActionListener(((JButton) e.getSource()).getText());	
		}
	}
public class GameActionListener implements ActionListener{
	public void actionPerformed(ActionEvent e){
			messageFromNumAtionListener2(((JTextField) e.getSource()).getText());
		}
	}
public void messageFromNumActionListener(String buttonValue) { //classe original presente no SudokuPanel
		if(currentlySelectedCol != -1 && currentlySelectedRow != -1) {
			puzzle.makeMove(currentlySelectedRow, currentlySelectedCol, buttonValue, true);
			repaint();
		}
	}
public void messageFromNumActionListener2(String textfieldValue) {
		if(currentlySelectedCol != -1 && currentlySelectedRow != -1) {
			puzzle.makeMove(currentlySelectedRow, currentlySelectedCol, textfieldValue, true);
			repaint();
		}
	}
